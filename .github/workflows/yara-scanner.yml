name: ci

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'info' 
        type: choice
        options:
        - info
        - warning
        - debug 
      tags:
        description: 'Test scenario tags'
        required: false 
        type: boolean
  push:
    branches:
    - "*"  # run for branches
    tags:
    - "*"  # run for tags
  pull_request:
    branches:
    - "*"  # run for branches
    tags:
    - "*"  # run for tags

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GROUP: deepfence
      COMMIT: ${{ github.sha }}

    steps:
    - uses: actions/checkout@v2


    # Run Deepfence Vulnerability Mapper to check for vulnerabilities in image
    - name: Run Deepfence IOC Scanner
      env:
        FULL_IMAGE_NAME: ${{ env.GROUP }}/${{ env.REPO }}:${{ github.sha }}
        FAIL_CVE_COUNT: 100 # Fail build if number of vulnerabilities found is >= this number. Set -1 to pass regardless of vulnerabilities.
        FAIL_CVE_SCORE: 8 # Fail build if cumulative CVE score is >= this value. Set -1 to pass regardless of cve score.
      run: |
        mkdir deepfence_docker
        docker_config_path="$(pwd)/deepfence_docker"
        docker_creds=$(echo -n "${{ secrets.DOCKER_USER }}:${{ secrets.DOCKER_PASS }}" | base64)
        echo "{\"auths\":{\"https://index.docker.io/v1/\":{\"auth\":\"$docker_creds\"}}}" > "$docker_config_path/config.json"
        docker --config "$docker_config_path" pull deepfenceio/deepfence-ioc-scanner:harsh-dev
        rm -rf deepfence_docker
        docker pull node:latest
        docker run -it --rm --name=deepfence-ioc-scanner -v /var/run/docker.sock:/var/run/docker.sock deepfenceio/deepfence-ioc-scanner:harsh-dev --image-name node:latest
